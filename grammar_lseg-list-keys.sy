(synth-fun lemma ((x Int) (nil Int) (y Int)) Bool
           ((Start Bool) (RecB Bool) (S (Set Int)) (S1 (Set Int)) (B Bool) (B1 Bool) (I Int) (Loc Int) (Loc1 Int))

           ((Start Bool
                  ((=> RecB B)))
           (RecB Bool
                  ((lseg_y Loc)))
           (S (Set Int) (S1
                  (union S1 S1)))
           (S1 (Set Int)
                  ((keys Loc)
                   (lsegkeys_y Loc)))
           (B Bool (B1
                   (=> B1 B1)))
           (B1 Bool
                  ((= S S)
                   (lseg_y Loc)
                   (list Loc)))
           (I Int
                  ((key Loc)))
           (Loc Int (Loc1
                   (next Loc1)))
           (Loc1 Int (x y)))
)

